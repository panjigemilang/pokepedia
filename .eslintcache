[{"C:\\Panji\\tes kerja\\pokepedia\\src\\index.js":"1","C:\\Panji\\tes kerja\\pokepedia\\src\\App.js":"2","C:\\Panji\\tes kerja\\pokepedia\\src\\reportWebVitals.js":"3","C:\\Panji\\tes kerja\\pokepedia\\src\\contexts\\PokemonContext.js":"4","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\Loading.jsx":"5","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\GeneralStyled.js":"6","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\Card.jsx":"7","C:\\Panji\\tes kerja\\pokepedia\\src\\screens\\MyPokemons.jsx":"8","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\Search.jsx":"9","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\CardDetail.jsx":"10","C:\\Panji\\tes kerja\\pokepedia\\src\\utils\\isEmpty.js":"11","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\Modal.jsx":"12","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\layouts\\NavigationBar.jsx":"13","C:\\Panji\\tes kerja\\pokepedia\\src\\screens\\PokeDex.jsx":"14","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\layouts\\AppBar.jsx":"15","C:\\Panji\\tes kerja\\pokepedia\\src\\contexts\\ToastContext.js":"16","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\Toast.jsx":"17","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\PokemonSkeleton.jsx":"18","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\InputPokemon.jsx":"19","C:\\Panji\\tes kerja\\pokepedia\\src\\contexts\\SearchContext.js":"20","C:\\Panji\\tes kerja\\pokepedia\\src\\utils\\Fade.jsx":"21","C:\\Panji\\tes kerja\\pokepedia\\src\\serviceWorker.js":"22"},{"size":546,"mtime":1610603004075,"results":"23","hashOfConfig":"24"},{"size":1790,"mtime":1610595977811,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1610021734584,"results":"26","hashOfConfig":"24"},{"size":1175,"mtime":1610207237464,"results":"27","hashOfConfig":"24"},{"size":448,"mtime":1610031722548,"results":"28","hashOfConfig":"24"},{"size":582,"mtime":1610180754979,"results":"29","hashOfConfig":"24"},{"size":2641,"mtime":1610593961547,"results":"30","hashOfConfig":"24"},{"size":2249,"mtime":1610507710899,"results":"31","hashOfConfig":"24"},{"size":1852,"mtime":1610168326394,"results":"32","hashOfConfig":"24"},{"size":10159,"mtime":1610600174768,"results":"33","hashOfConfig":"24"},{"size":232,"mtime":1610063418305,"results":"34","hashOfConfig":"24"},{"size":1272,"mtime":1610533865848,"results":"35","hashOfConfig":"24"},{"size":1546,"mtime":1610520008887,"results":"36","hashOfConfig":"24"},{"size":3097,"mtime":1610591877669,"results":"37","hashOfConfig":"24"},{"size":606,"mtime":1610507722385,"results":"38","hashOfConfig":"24"},{"size":482,"mtime":1610090417706,"results":"39","hashOfConfig":"24"},{"size":1223,"mtime":1610600313876,"results":"40","hashOfConfig":"24"},{"size":555,"mtime":1610121895033,"results":"41","hashOfConfig":"24"},{"size":3340,"mtime":1610596442292,"results":"42","hashOfConfig":"24"},{"size":364,"mtime":1610168228286,"results":"43","hashOfConfig":"24"},{"size":550,"mtime":1610534853710,"results":"44","hashOfConfig":"24"},{"size":4621,"mtime":1610602978150,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mfjxrj",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Panji\\tes kerja\\pokepedia\\src\\index.js",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\App.js",["97"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport PokemonContextProvider from \"./contexts/PokemonContext\"\nimport ToastContextProvider from \"./contexts/ToastContext\"\nimport SearchContextProvider from \"./contexts/SearchContext\"\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\"\nimport { jsx, ThemeProvider } from \"@emotion/react\"\nimport \"./App.css\"\n\n// UI Components\nimport PokeDex from \"./screens/PokeDex\"\nimport MyPokemons from \"./screens/MyPokemons\"\nimport CardDetail from \"./components/CardDetail\"\nimport Modal from \"./components/Modal\"\nimport Toast from \"./components/Toast\"\nimport NavigationBar from \"./components/layouts/NavigationBar\"\n\nconst client = new ApolloClient({\n  uri: \"https://graphql-pokeapi.vercel.app/api/graphql\",\n  cache: new InMemoryCache(),\n})\n\nconst theme = {\n  colors: {\n    primary: \"#FFD474\",\n    secondary: \"#10e879\",\n    common: \"#46c298\",\n  },\n  toast: {\n    success: \"#13c57b\",\n    failed: \"#d42c2c\",\n  },\n  textColors: {\n    info: \"#17b2f0\",\n  },\n}\n\nexport { theme }\n\nfunction App() {\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <ApolloProvider client={client}>\n          <PokemonContextProvider>\n            <ToastContextProvider>\n              <SearchContextProvider>\n                <Modal />\n                <Toast />\n                <CardDetail />\n                <NavigationBar />\n                <Switch>\n                  <Route exact path=\"/\" component={PokeDex} />\n                  <Route exact path=\"/myPokemons\" component={MyPokemons} />\n                </Switch>\n              </SearchContextProvider>\n            </ToastContextProvider>\n          </PokemonContextProvider>\n        </ApolloProvider>\n      </ThemeProvider>\n    </Router>\n  )\n}\n\nexport default App\n",["98","99"],"C:\\Panji\\tes kerja\\pokepedia\\src\\reportWebVitals.js",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\contexts\\PokemonContext.js",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\components\\Loading.jsx",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\components\\GeneralStyled.js",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\components\\Card.jsx",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\screens\\MyPokemons.jsx",["100","101"],"import { useContext, useEffect, useRef, useState } from \"react\"\r\nimport isEmpty from \"../utils/isEmpty\"\r\nimport styled from \"@emotion/styled\"\r\nimport { PokemonContext } from \"../contexts/PokemonContext\"\r\nimport { SearchContext } from \"../contexts/SearchContext\"\r\nimport Loading from \"../components/Loading\"\r\nimport { Heading, Row } from \"../components/GeneralStyled\"\r\nimport Card from \"../components/Card\"\r\nimport AppBar from \"../components/layouts/AppBar\"\r\nimport Search from \"../components/Search\"\r\n\r\nconst App = styled.div`\r\n  padding: 8px;\r\n`\r\n\r\nexport default function MyPokemons() {\r\n  const { pokemons: pokemonsContext } = useContext(PokemonContext)\r\n  const { search } = useContext(SearchContext)\r\n  const [pokemons, setPokemons] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const firstRender = useRef(true)\r\n\r\n  useEffect(() => {\r\n    fetchPokemon()\r\n  }, [pokemonsContext])\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      return\r\n    }\r\n\r\n    setLoading(true)\r\n\r\n    if (search) {\r\n      setPokemons(\r\n        pokemonsContext.filter((item) =>\r\n          item.nickname.toLowerCase().includes(search.toLowerCase())\r\n        )\r\n      )\r\n    } else {\r\n      fetchPokemon()\r\n    }\r\n  }, [search])\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false\r\n      return\r\n    }\r\n\r\n    setLoading(false)\r\n  }, [pokemons])\r\n\r\n  const fetchPokemon = () => {\r\n    setLoading(true)\r\n\r\n    setPokemons(pokemonsContext)\r\n  }\r\n\r\n  return (\r\n    <App>\r\n      <AppBar\r\n        title=\"My Pokemons\"\r\n        total={!isEmpty(pokemons) && pokemons.length}\r\n      />\r\n      <Search />\r\n      <Row height=\"67vh\" overflowY=\"scroll\">\r\n        {loading && <Loading />}\r\n        {!loading &&\r\n          !isEmpty(pokemons) &&\r\n          pokemons.map((item, i) => (\r\n            <Card\r\n              key={`card-${i}`}\r\n              src={item.src}\r\n              id={item.id}\r\n              alt={item.nickname}\r\n              name={item.name}\r\n              nickname={item.nickname}\r\n              width=\"33.3333%\"\r\n            />\r\n          ))}\r\n        {isEmpty(pokemons) && (\r\n          <Heading>No Pokemons found. try to catch them all!</Heading>\r\n        )}\r\n      </Row>\r\n    </App>\r\n  )\r\n}\r\n","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\Search.jsx",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\components\\CardDetail.jsx",["102","103"],"import { useContext, useEffect } from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { useQuery, gql } from \"@apollo/client\"\r\nimport styled from \"@emotion/styled\"\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\r\nimport { PokemonContext } from \"../contexts/PokemonContext\"\r\nimport isEmpty from \"../utils/isEmpty\"\r\nimport Loading from \"./Loading\"\r\nimport InputPokemon from \"./InputPokemon\"\r\nimport ReleasePokemon from \"../assets/icons/release-pokemon.png\"\r\nimport { ToastContext } from \"../contexts/ToastContext\"\r\nimport Fade from \"../utils/Fade\"\r\nimport { SearchContext } from \"../contexts/SearchContext\"\r\n\r\nconst GET_POKEMON = gql`\r\n  query($name: String!) {\r\n    pokemon(name: $name) {\r\n      name\r\n      base_experience\r\n      types {\r\n        type {\r\n          name\r\n        }\r\n      }\r\n      stats {\r\n        base_stat\r\n        stat {\r\n          name\r\n        }\r\n      }\r\n      abilities {\r\n        ability {\r\n          name\r\n        }\r\n      }\r\n      sprites {\r\n        front_default\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport { GET_POKEMON }\r\n\r\nconst App = styled.div`\r\n  height: 100%;\r\n  position: absolute;\r\n  visibility: ${({ show }) => (show ? \"visible\" : \"hidden\")};\r\n  width: 100%;\r\n  z-index: 5;\r\n`\r\n\r\nconst Overlay = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  height: 100%;\r\n  opacity: ${({ show }) => (show ? 1 : 0)};\r\n  position: absolute;\r\n  width: 100%;\r\n  z-index: 1;\r\n`\r\n\r\nconst DetailBox = styled.div`\r\n  background-color: white;\r\n  border-radius: 20px 20px 0 0;\r\n  height: 90%;\r\n  padding: 16px;\r\n  position: absolute;\r\n  bottom: ${({ show }) => (show ? 0 : \"-100vh\")};\r\n  transition: 0.3s ease-in-out;\r\n  width: 100%;\r\n  z-index: 4;\r\n`\r\n\r\nconst ActionButton = styled.button`\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  height: 80px;\r\n  right: 10%;\r\n  bottom: 1.75rem;\r\n  width: 80px;\r\n`\r\n\r\nconst CloseButton = styled.button`\r\n  height: 50px;\r\n  left: 50%;\r\n  bottom: 1.75rem;\r\n  transform: translateX(-50%);\r\n  width: 50px;\r\n`\r\n\r\nconst CloseIcon = styled.i`\r\n  border: 2px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-radius: 50%;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  font-size: 16px;\r\n  height: 80%;\r\n  width: 80%;\r\n\r\n  &:before {\r\n    line-height: 2.1rem;\r\n  }\r\n`\r\n\r\nconst PokemonDetail = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 30rem;\r\n  overflow-y: auto;\r\n`\r\n\r\nconst Image = styled.img`\r\n  height: 100%;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst DescriptionBox = styled.div`\r\n  display: ${({ display }) => display};\r\n  padding: ${({ padding }) => padding};\r\n\r\n  h4.nickname {\r\n    font-weight: 400;\r\n    margin: 0;\r\n    position: relative;\r\n    text-align: center;\r\n\r\n    span {\r\n      position: absolute;\r\n      top: 0;\r\n      right: -1.3rem;\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst Name = styled.h2`\r\n  font-weight: 700;\r\n  margin: 0;\r\n  text-align: center;\r\n`\r\n\r\nconst HpBar = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.common};\r\n  border-radius: 20px;\r\n  height: 4px;\r\n  margin: 4px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst Hp = styled.div`\r\n  text-align: center;\r\n\r\n  p {\r\n    font-size: 12px;\r\n    font-weight: bolder;\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nconst Tab = styled.div`\r\n  border-left: ${({ borderLeft }) => borderLeft};\r\n  border-right: ${({ borderRight }) => borderRight};\r\n  text-align: center;\r\n  width: ${({ width }) => (width ? width : \"auto\")};\r\n\r\n  h4 {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  p.types {\r\n    border: 3px whitesmoke solid;\r\n    border-radius: 20px;\r\n    color: white;\r\n    margin: 0 auto;\r\n    padding: 6px;\r\n    width: 90%;\r\n  }\r\n\r\n  .abilities-wrapper {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    p {\r\n      background-color: ${({ theme }) => theme.colors.common};\r\n      border: 3px whitesmoke solid;\r\n      border-radius: 20px;\r\n      color: white;\r\n      padding: 8px 16px;\r\n    }\r\n  }\r\n`\r\n\r\nexport default function CardDetail() {\r\n  const location = useLocation()\r\n  const {\r\n    selected,\r\n    setSelected,\r\n    pokemon,\r\n    pokemons,\r\n    setPokemons,\r\n    isCatching,\r\n    setIsCatching,\r\n    setIsEditNickname,\r\n    setCatched,\r\n    inputNickname,\r\n    setInputNickname,\r\n  } = useContext(PokemonContext)\r\n  const { setMessage, setToast } = useContext(ToastContext)\r\n  const { setSearch } = useContext(SearchContext)\r\n  const { loading, error, data, refetch } = useQuery(GET_POKEMON, {\r\n    variables: {\r\n      name: pokemon.name || \"a\",\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(pokemon)) refetch()\r\n  }, [pokemon])\r\n\r\n  useEffect(() => {\r\n    let timeout\r\n\r\n    // catching pokemon\r\n    if (isCatching) {\r\n      const probability = 0.5\r\n\r\n      const catched = Math.random() > probability\r\n\r\n      timeout = setTimeout(() => {\r\n        setCatched(catched)\r\n\r\n        if (catched) {\r\n          setMessage(\"Catch succeed!\")\r\n\r\n          setInputNickname(true)\r\n        } else {\r\n          setMessage(\"Catch failed, try again!\")\r\n        }\r\n\r\n        setIsCatching(false)\r\n        // show toast and input nickname\r\n        setToast(true)\r\n      }, 2000)\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [isCatching])\r\n\r\n  const catchPokemon = () => {\r\n    setIsCatching(true)\r\n  }\r\n\r\n  const releasePokemon = () => {\r\n    let temp = pokemons\r\n\r\n    // temp = temp.splice(pokemons.indexOf(pokemon.id), 1)\r\n    temp = temp.filter((item) => item.id !== pokemon.id)\r\n\r\n    window.localStorage.setItem(\"pokemons\", JSON.stringify(pokemons))\r\n    setPokemons(temp)\r\n\r\n    setSelected(false)\r\n    setMessage(\"Pokemon released!\")\r\n    setToast(true)\r\n    setSearch(\"\")\r\n  }\r\n\r\n  const editNickname = () => {\r\n    setIsEditNickname(true)\r\n    setInputNickname(true)\r\n  }\r\n\r\n  const renderNickname = () => {\r\n    if (pokemon.nickname)\r\n      return (\r\n        <h4 className=\"nickname\">\r\n          {pokemon.nickname}\r\n          <span onClick={editNickname}>\r\n            <i className=\"fas fa-pen\"></i>\r\n          </span>\r\n        </h4>\r\n      )\r\n    else return\r\n  }\r\n\r\n  const renderCaptured = () => {\r\n    const captured = pokemons.filter((item) => item.name === pokemon.name)\r\n\r\n    return (\r\n      <div>\r\n        <h4>Captured</h4>\r\n        <p>{captured.length}</p>\r\n        {captured.length > 0 && <small>Times</small>}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const capitalize = (string) => string[0].toUpperCase() + string.substring(1)\r\n\r\n  if (isEmpty(pokemon)) return <div />\r\n  else\r\n    return (\r\n      <Fade show={selected}>\r\n        <App show={selected}>\r\n          <Overlay show={selected} />\r\n          <DetailBox show={selected}>\r\n            {loading === true && <Loading />}\r\n            {loading === false && error && <h1>Something's wrong</h1>}\r\n            {loading === false && (\r\n              <PokemonDetail>\r\n                <LazyLoadImage\r\n                  src={data.pokemon.sprites.front_default}\r\n                  alt={data.pokemon.name}\r\n                  effect=\"black-and-white\"\r\n                  height=\"96px\"\r\n                  width=\"auto\"\r\n                />\r\n                <DescriptionBox padding=\"0 5rem\">\r\n                  <Name>{capitalize(data.pokemon.name)}</Name>\r\n                  {location.pathname === \"/myPokemons\" && renderNickname()}\r\n                  <HpBar />\r\n                  <Hp>\r\n                    <p>\r\n                      {data.pokemon.stats[0].base_stat}/\r\n                      {data.pokemon.stats[0].base_stat} HP\r\n                    </p>\r\n                  </Hp>\r\n                </DescriptionBox>\r\n                <DescriptionBox display=\"flex\" padding=\"16px 8px\">\r\n                  <Tab width=\"33.3333%\">\r\n                    <h4>Types</h4>\r\n                    <p\r\n                      className={`types type-${data.pokemon.types[0].type.name}`}\r\n                    >\r\n                      {data.pokemon.types[0].type.name}\r\n                    </p>\r\n                  </Tab>\r\n                  <Tab\r\n                    borderLeft=\"1px rgba(0, 0, 0, .2) solid\"\r\n                    borderRight=\"1px rgba(0, 0, 0, .2) solid\"\r\n                    width=\"33.3333%\"\r\n                  >\r\n                    {renderCaptured()}\r\n                  </Tab>\r\n                  <Tab width=\"33.3333%\">\r\n                    <h4>EXP</h4>\r\n                    <p>{data.pokemon.base_experience}</p>\r\n                  </Tab>\r\n                </DescriptionBox>\r\n                <DescriptionBox padding=\"16px 8px\">\r\n                  <Tab>\r\n                    <h4>Abilities</h4>\r\n                    <div className=\"abilities-wrapper\">\r\n                      {data.pokemon.abilities.map((item, i) => (\r\n                        <p className=\"ability\" key={`abilities-${i}`}>\r\n                          {item.ability.name}\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  </Tab>\r\n                </DescriptionBox>\r\n                <InputPokemon />\r\n              </PokemonDetail>\r\n            )}\r\n            {location.pathname === \"/\" && (\r\n              <ActionButton\r\n                data-testid=\"qa-catch-pokemon\"\r\n                className=\"circle-button\"\r\n                onClick={catchPokemon}\r\n                disabled={inputNickname}\r\n              >\r\n                <Image\r\n                  src=\"https://cdn.pixabay.com/photo/2016/07/23/13/18/pokemon-1536849_960_720.png\"\r\n                  alt=\"Pokeball\"\r\n                />\r\n              </ActionButton>\r\n            )}\r\n            <CloseButton\r\n              className=\"circle-button\"\r\n              onClick={() => setSelected(false)}\r\n              disabled={inputNickname}\r\n            >\r\n              <CloseIcon className=\"fas fa-times\"></CloseIcon>\r\n            </CloseButton>\r\n            {location.pathname === \"/myPokemons\" && (\r\n              <ActionButton\r\n                bgColor=\"transparent\"\r\n                className=\"circle-button\"\r\n                onClick={releasePokemon}\r\n                disabled={inputNickname}\r\n              >\r\n                <Image src={ReleasePokemon} alt=\"Released Pokeball\" />\r\n              </ActionButton>\r\n            )}\r\n          </DetailBox>\r\n        </App>\r\n      </Fade>\r\n    )\r\n}\r\n","C:\\Panji\\tes kerja\\pokepedia\\src\\utils\\isEmpty.js",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\components\\Modal.jsx",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\components\\layouts\\NavigationBar.jsx",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\screens\\PokeDex.jsx",["104"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { gql, useQuery } from \"@apollo/client\"\r\nimport styled from \"@emotion/styled\"\r\nimport Loading from \"../components/Loading\"\r\nimport { Row } from \"../components/GeneralStyled\"\r\nimport Card from \"../components/Card\"\r\nimport AppBar from \"../components/layouts/AppBar\"\r\nimport PokemonSkeleton from \"../components/PokemonSkeleton\"\r\nimport { PokemonContext } from \"../contexts/PokemonContext\"\r\n\r\nconst GET_POKEMONS = gql`\r\n  query($limit: Int!, $offset: Int!) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      nextOffset\r\n      results {\r\n        id\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport { GET_POKEMONS }\r\n\r\nconst App = styled.div`\r\n  padding: 8px;\r\n`\r\n\r\nconst SkeletonWrapper = styled.div`\r\n  align-items: stretch;\r\n  background: white;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`\r\n\r\nexport default function PokeDex() {\r\n  const limit = 9\r\n  const offset = 0\r\n  const { loading, error, data, fetchMore } = useQuery(GET_POKEMONS, {\r\n    variables: { limit, offset },\r\n  })\r\n  const { pokemons: pokemonsContext } = useContext(PokemonContext)\r\n  const [refetching, setRefetching] = useState(false)\r\n  const [hasNextPage, setHasNextPage] = useState(false)\r\n  const [pokemons, setPokemons] = useState([])\r\n\r\n  useEffect(() => {\r\n    // run once\r\n    if (data && pokemons.length === 0) {\r\n      setPokemons(data.pokemons.results)\r\n      setHasNextPage(data.pokemons.nextOffset)\r\n    }\r\n  }, [data])\r\n\r\n  const next = () => {\r\n    // loading for refetching\r\n    setRefetching(true)\r\n\r\n    const offset = hasNextPage\r\n\r\n    fetchMore({\r\n      variables: {\r\n        limit,\r\n        offset,\r\n      },\r\n      updateQuery: (prevResult, { fetchMoreResult }) => {\r\n        let results = fetchMoreResult.pokemons.results\r\n\r\n        results = [...pokemons, ...results]\r\n\r\n        setRefetching(false)\r\n        setPokemons(results)\r\n        setHasNextPage(fetchMoreResult.pokemons.nextOffset)\r\n\r\n        return results\r\n      },\r\n    })\r\n  }\r\n\r\n  const loadMore = (e) => {\r\n    const bottom =\r\n      e.target.scrollHeight - Math.floor(e.target.scrollTop) ===\r\n      e.target.clientHeight\r\n\r\n    // if scrolled to the bottom of page\r\n    if (bottom) {\r\n      next()\r\n    }\r\n  }\r\n\r\n  if (loading) return <Loading />\r\n  if (error) return <h2>{error}</h2>\r\n\r\n  return (\r\n    <App>\r\n      <AppBar title=\"Pokedex\" total={pokemons.length} />\r\n      <Row\r\n        height=\"75vh\"\r\n        overflowY=\"scroll\"\r\n        onLoad={loadMore}\r\n        onScroll={loadMore}\r\n      >\r\n        {pokemons.map((item, i) => (\r\n          <Card\r\n            key={`card-${i}`}\r\n            id={pokemonsContext.length}\r\n            src={item.image}\r\n            alt={item.name}\r\n            name={item.name}\r\n            width=\"33.3333%\"\r\n          />\r\n        ))}\r\n        {!refetching && (\r\n          <SkeletonWrapper>\r\n            <PokemonSkeleton padding />\r\n            <PokemonSkeleton padding />\r\n            <PokemonSkeleton padding />\r\n          </SkeletonWrapper>\r\n        )}\r\n      </Row>\r\n    </App>\r\n  )\r\n}\r\n","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\layouts\\AppBar.jsx",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\contexts\\ToastContext.js",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\components\\Toast.jsx",["105"],"import { useContext, useEffect } from \"react\"\r\nimport styled from \"@emotion/styled\"\r\nimport { ToastContext } from \"../contexts/ToastContext\"\r\nimport { PokemonContext } from \"../contexts/PokemonContext\"\r\nimport Fade from \"../utils/Fade\"\r\n\r\nconst App = styled.div`\r\n  background-color: ${({ catched, theme }) =>\r\n    catched ? theme.toast.success : theme.toast.failed};\r\n  border-radius: 5px;\r\n  box-shadow: 1px 5px 10px -2px rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n  padding: 8px 16px;\r\n  position: absolute;\r\n  bottom: ${({ show }) => (show ? \"10%\" : \"-50%\")};\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  transition: 0.3s ease-in-out;\r\n  width: max-content;\r\n  z-index: 99;\r\n`\r\n\r\nexport default function Toast() {\r\n  const { toast, setToast, message } = useContext(ToastContext)\r\n  const { catched } = useContext(PokemonContext)\r\n\r\n  useEffect(() => {\r\n    let toastTimeout\r\n\r\n    if (toast)\r\n      toastTimeout = setTimeout(() => {\r\n        setToast(false)\r\n      }, 2000)\r\n\r\n    return () => {\r\n      clearTimeout(toastTimeout)\r\n    }\r\n  }, [toast])\r\n  return (\r\n    <Fade show={toast}>\r\n      <App show={toast} catched={catched} onClick={() => setToast(false)}>\r\n        {message}\r\n      </App>\r\n    </Fade>\r\n  )\r\n}\r\n","C:\\Panji\\tes kerja\\pokepedia\\src\\components\\PokemonSkeleton.jsx",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\components\\InputPokemon.jsx",["106"],"import { useContext, useEffect, useRef, useState } from \"react\"\r\nimport styled from \"@emotion/styled\"\r\nimport { PokemonContext } from \"../contexts/PokemonContext\"\r\nimport { ToastContext } from \"../contexts/ToastContext\"\r\nimport { SearchContext } from \"../contexts/SearchContext\"\r\nimport Fade from \"../utils/Fade\"\r\n\r\nconst App = styled.div`\r\n  background-color: whitesmoke;\r\n  box-shadow: 0 20px 33px 5px rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  padding: 8px;\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: ${({ show }) => (show ? \"0\" : \"-5rem\")};\r\n  transition: 0.3s ease-in-out;\r\n  width: 100%;\r\n  z-index: 99;\r\n`\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  border-radius: 5px;\r\n  margin: 0 4px;\r\n  padding: 8px;\r\n  width: 80%;\r\n`\r\n\r\nconst Button = styled.button`\r\n  background-color: ${({ btnColor }) => btnColor};\r\n  border-radius: 3px;\r\n  color: white;\r\n  font-weight: 500;\r\n  margin: 0 4px;\r\n  width: 10%;\r\n`\r\n\r\nexport default function InputPokemon() {\r\n  const {\r\n    catched,\r\n    isEditNickname,\r\n    setIsEditNickname,\r\n    inputNickname,\r\n    setInputNickname,\r\n    pokemon,\r\n    pokemons,\r\n    setPokemon,\r\n    setPokemons,\r\n  } = useContext(PokemonContext)\r\n  const { setMessage, setToast } = useContext(ToastContext)\r\n  const { setSearch } = useContext(SearchContext)\r\n  const [nickname, setNickname] = useState(\"\")\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if (inputNickname && inputRef.current)\r\n      inputRef.current.focus({\r\n        preventScroll: true,\r\n      })\r\n  }, [inputNickname])\r\n\r\n  const onEnter = (e) => {\r\n    if (e.key === \"Enter\") onSubmit()\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    const defaultNickname = \"Jamal\"\r\n    const data = {\r\n      ...pokemon,\r\n      nickname: nickname ? nickname : defaultNickname,\r\n    }\r\n    const temp = pokemons\r\n\r\n    // Edit nickname or add new pokemon\r\n    if (isEditNickname) {\r\n      // get index of\r\n      const index = temp.reduce((cur, val, id) => {\r\n        if (val.id === pokemon.id && cur === -1) {\r\n          return id\r\n        }\r\n        return cur\r\n      }, -1)\r\n\r\n      temp[index] = data\r\n\r\n      setMessage(\"Nickname edited!\")\r\n      setIsEditNickname(false)\r\n      // emptying search\r\n      setSearch(\"\")\r\n    } else {\r\n      temp.push(data)\r\n\r\n      setMessage(\"Added to My Pokemons!\")\r\n    }\r\n\r\n    // save it to localstorage\r\n    window.localStorage.setItem(\"pokemons\", JSON.stringify(temp))\r\n    // set pokemons and current pokemon\r\n    setPokemons(temp)\r\n    // updating current data id\r\n    data.id = pokemons.length\r\n    setPokemon(data)\r\n\r\n    setToast(true)\r\n    setInputNickname(false)\r\n\r\n    // Clear nickname field\r\n    setNickname(\"\")\r\n  }\r\n\r\n  return (\r\n    <Fade show={inputNickname}>\r\n      <App show={inputNickname}>\r\n        <Input\r\n          ref={inputRef}\r\n          type=\"text\"\r\n          onChange={(e) => setNickname(e.target.value)}\r\n          onKeyUp={onEnter}\r\n          value={nickname}\r\n          placeholder=\"Nickname ...\"\r\n        />\r\n        <Button\r\n          btnColor=\"#3e7afc\"\r\n          onClick={onSubmit}\r\n          data-testid=\"qa-submit-nickname\"\r\n        >\r\n          <i className=\"fas fa-check\"></i>\r\n        </Button>\r\n        <Button btnColor=\"#cf243b\" onClick={() => setInputNickname(false)}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </Button>\r\n      </App>\r\n    </Fade>\r\n  )\r\n}\r\n","C:\\Panji\\tes kerja\\pokepedia\\src\\contexts\\SearchContext.js",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\utils\\Fade.jsx",[],"C:\\Panji\\tes kerja\\pokepedia\\src\\serviceWorker.js",[],{"ruleId":"107","severity":1,"message":"108","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":13},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":25,"column":6,"nodeType":"117","endLine":25,"endColumn":23,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":43,"column":6,"nodeType":"117","endLine":43,"endColumn":14,"suggestions":"120"},{"ruleId":"115","severity":1,"message":"121","line":221,"column":6,"nodeType":"117","endLine":221,"endColumn":15,"suggestions":"122"},{"ruleId":"115","severity":1,"message":"123","line":252,"column":6,"nodeType":"117","endLine":252,"endColumn":18,"suggestions":"124"},{"ruleId":"115","severity":1,"message":"125","line":55,"column":6,"nodeType":"117","endLine":55,"endColumn":12,"suggestions":"126"},{"ruleId":"115","severity":1,"message":"127","line":38,"column":6,"nodeType":"117","endLine":38,"endColumn":13,"suggestions":"128"},{"ruleId":"107","severity":1,"message":"129","line":40,"column":5,"nodeType":"109","messageId":"110","endLine":40,"endColumn":12},"no-unused-vars","'jsx' is defined but never used.","Identifier","unusedVar","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPokemon'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has missing dependencies: 'fetchPokemon' and 'pokemonsContext'. Either include them or remove the dependency array.",["133"],"React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has missing dependencies: 'setCatched', 'setInputNickname', 'setIsCatching', 'setMessage', and 'setToast'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has a missing dependency: 'pokemons.length'. Either include it or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'setToast'. Either include it or remove the dependency array.",["137"],"'catched' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [fetchPokemon, pokemonsContext]",{"range":"150","text":"151"},"Update the dependencies array to be: [fetchPokemon, pokemonsContext, search]",{"range":"152","text":"153"},"Update the dependencies array to be: [pokemon, refetch]",{"range":"154","text":"155"},"Update the dependencies array to be: [isCatching, setCatched, setInputNickname, setIsCatching, setMessage, setToast]",{"range":"156","text":"157"},"Update the dependencies array to be: [data, pokemons.length]",{"range":"158","text":"159"},"Update the dependencies array to be: [setToast, toast]",{"range":"160","text":"161"},[889,906],"[fetchPokemon, pokemonsContext]",[1230,1238],"[fetchPokemon, pokemonsContext, search]",[4548,4557],"[pokemon, refetch]",[5166,5178],"[isCatching, setCatched, setInputNickname, setIsCatching, setMessage, setToast]",[1507,1513],"[data, pokemons.length]",[1046,1053],"[setToast, toast]"]